<UserControl x:Name="userControl" x:Class="AvnConnect.Staffs.AddStaff"
			 xmlns:Material="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 VerticalAlignment="Center"
			 xmlns:Converter="clr-namespace:AvnConnect.Converter"
			 xmlns:domain1="clr-namespace:AvnConnect.Domain"
			 SnapsToDevicePixels="True"
			 HorizontalAlignment="Center"
			 Background="White"
			 xmlns:local="clr-namespace:AvnConnect.Staffs">

    <UserControl.Resources>
        <Converter:SelectedToBackgroundBrush x:Key="SelectedToBackgroundBrush"/>
        <Converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Converter:EmptyStringToRedBorderBrush x:Key="EmptyStringToRedBorderBrush"/>
        <Converter:EmptySelectionToRedBorderBrush x:Key="EmptySelectionToRedBorderBrush"/>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <!--Thanh tiêu đề-->
        <DockPanel Background="{DynamicResource PrimaryHueDarkBrush}">
            <Border Padding="6" DockPanel.Dock="Right" Margin="20, 10" Background="Transparent" ToolTip="Close" MouseLeftButtonUp="CloseButton_Click" VerticalAlignment="Center" Cursor="Hand">
                <Material:PackIcon Kind="CloseBox" Foreground="White"></Material:PackIcon>
            </Border>
            <TextBlock Margin="20, 10" Text="Add User" Foreground="White" Style="{DynamicResource MaterialDesignDisplay1TextBlock}"></TextBlock>
        </DockPanel>

        <!--Tab control-->
        <Border Padding="10, 3" BorderBrush="LightGray" Grid.Row="1" BorderThickness="0, 0, 0, 2">
            <StackPanel Orientation="Horizontal">
                <ListBox Visibility="Collapsed" x:Name="ItemListBox">
                    <ListBoxItem x:Name="PersonalItem"  IsSelected="True" >
                    </ListBoxItem>
                    <ListBoxItem x:Name="EducationItem" >
                    </ListBoxItem>
                    <ListBoxItem   x:Name="LanguageItem" >
                    </ListBoxItem>
                    <ListBoxItem x:Name="PracticingItem" >
                    </ListBoxItem>
                    <ListBoxItem x:Name="ExperienceItem">
                    </ListBoxItem>
                    <ListBoxItem x:Name="PermissionItem" >
                    </ListBoxItem>
                </ListBox>
                <Button Content="Personal" 
						Tag="PersonalItem" Click="HeaderButtonClicked" Style="{DynamicResource MaterialDesignFlatButton}" Margin="3, 6" Background="{Binding IsSelected, Converter={StaticResource SelectedToBackgroundBrush}, ElementName=PersonalItem}"></Button>
                <Button Content="Education" Click="HeaderButtonClicked" Tag="EducationItem" Style="{DynamicResource MaterialDesignFlatButton}" Margin="3, 6" Background="{Binding IsSelected, Converter={StaticResource SelectedToBackgroundBrush}, ElementName=EducationItem}"></Button>
                <Button Content="Foreign Language" Click="HeaderButtonClicked" Tag="LanguageItem" Style="{DynamicResource MaterialDesignFlatButton}" Margin="3, 6" Background="{Binding IsSelected, Converter={StaticResource SelectedToBackgroundBrush}, ElementName=LanguageItem}"></Button>
                <Button Content="Practicing License" Click="HeaderButtonClicked" Tag="PracticingItem" Style="{DynamicResource MaterialDesignFlatButton}" Margin="3, 6" Background="{Binding IsSelected, Converter={StaticResource SelectedToBackgroundBrush}, ElementName=PracticingItem}"></Button>
                <Button Content="Experiences" Click="HeaderButtonClicked" Tag="ExperienceItem" Style="{DynamicResource MaterialDesignFlatButton}" Margin="3, 6" Background="{Binding IsSelected, Converter={StaticResource SelectedToBackgroundBrush}, ElementName=ExperienceItem}"></Button>
                <Button Content="Permission" Click="HeaderButtonClicked" Tag="PermissionItem" Style="{DynamicResource MaterialDesignFlatButton}" Margin="3, 6" Background="{Binding IsSelected, Converter={StaticResource SelectedToBackgroundBrush}, ElementName=OtherItem}"></Button>
            </StackPanel>
        </Border>

        <!--Personal Information-->
        <DataGrid MaxHeight="450" Grid.Row="2" VerticalScrollBarVisibility="Auto" 
				  AutoGenerateColumns="False" CanUserAddRows="False"
				  Background="White"
				  HeadersVisibility="None"
				  RowBackground="Transparent"
				  x:Name="PersonalDatagrid"
				  Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=PersonalItem}">
            <DataGrid.Columns>
                <DataGridTemplateColumn HeaderStyle="{DynamicResource SpecialDatagridHeaderStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid x:Name="PersonalInformationGrid" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="200"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="200"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>

                                <!--HỌ và tên-->
                                <TextBlock Text="Family Name:" VerticalAlignment="Center" Margin="10, 3"></TextBlock>
                                <TextBox MinHeight="24" Grid.Column="1" Margin="10, 3" BorderBrush="{Binding Text, Converter={StaticResource EmptyStringToRedBorderBrush}, RelativeSource={RelativeSource Self}}"
						 Material:HintAssist.Hint="Required">
                                    <TextBox.Text>
                                        <Binding Path="Surname" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                    </TextBox.Text>
                                </TextBox>

                                <TextBlock Text="First Name:" VerticalAlignment="Center" Grid.Column="2" Margin="10, 3"></TextBlock>
                                <TextBox MinHeight="24" Grid.Column="3" Margin="10, 3" BorderBrush="{Binding Text, Converter={StaticResource EmptyStringToRedBorderBrush}, RelativeSource={RelativeSource Self}}"
						 Material:HintAssist.Hint="Required"
						 Text="{Binding Firstname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>

                                <!--Birthday and place of birth-->
                                <TextBlock Text="Date of Birth:" VerticalAlignment="Center" Grid.Row="1" Margin="10, 3"></TextBlock>
                                <DatePicker Grid.Column="1" HorizontalAlignment="Left" Margin="10, 3" Grid.Row="1" 
							SelectedDate="{Binding Birthday, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							Material:HintAssist.Hint="Select Date"></DatePicker>

                                <TextBlock Text="Place of Birth:" VerticalAlignment="Center" Grid.Row="1" Grid.Column="2" Margin="10, 3"></TextBlock>
                                <TextBox Grid.Column="3" Margin="10, 3" Text="{Binding PlaceOfBirth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1"></TextBox>

                                <!--First day and last day at work-->
                                <TextBlock Text="First day at AVN:" VerticalAlignment="Center" Grid.Row="2" Margin="10, 3"></TextBlock>
                                <DatePicker Grid.Column="1" HorizontalAlignment="Left" 
							SelectedDate="{Binding FirstDayAtWork, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							Margin="10, 3" Grid.Row="2" Material:HintAssist.Hint="Select Date"></DatePicker>

                                <TextBlock Text="Last day at AVN:" VerticalAlignment="Center" Grid.Row="2" Grid.Column="2" Margin="10, 3"></TextBlock>

                                <DatePicker Grid.Column="3" Grid.Row="2" SelectedDate="{Binding LastDayAtWork, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Left"
							HorizontalAlignment="Left" Margin="10, 3"  Material:HintAssist.Hint="Select Date"></DatePicker>

                                <!--Job Title and Department-->
                                <TextBlock Text="Job Title:" VerticalAlignment="Center" Grid.Row="3" Margin="10, 3"></TextBlock>
                                <DockPanel Grid.Column="1" Grid.Row="3" Margin="10,3">
                                    <Button DockPanel.Dock="Right" Margin="3, 0" VerticalAlignment="Center" Height="20"
											ToolTip="Add new job title"
                                            Click="AddNewJobTitleButton_Clicked"
                                            Padding="3" Style="{DynamicResource MaterialDesignFlatButton}">
                                        <Material:PackIcon Kind="Plus" VerticalAlignment="Center"></Material:PackIcon>
                                    </Button>
                                    <ComboBox VerticalAlignment="Center" x:Name="JobTitleCombobox" 
                                              DisplayMemberPath="Title"
                                              Loaded="JobTitleCombobox_Loaded"
                                              BorderBrush="{Binding SelectedIndex, Converter={StaticResource EmptySelectionToRedBorderBrush}, RelativeSource={RelativeSource Self}}"
                                              SelectionChanged="JobTitleComboboxSelectionChanged"
                                              Material:ComboBoxAssist.ClassicMode="true" Material:ComboBoxAssist.ShowSelectedItem="true" ItemsSource="{Binding JobTitleDbset, ElementName=userControl}"></ComboBox>
                                </DockPanel>
                                <TextBlock Text="Department:" VerticalAlignment="Center" Grid.Row="3" Grid.Column="2" Margin="10, 3"></TextBlock>
                                <DockPanel Grid.Column="3" Grid.Row="3" Margin="10, 3">
                                    <Button DockPanel.Dock="Right" Height="20" VerticalAlignment="Center" Margin="3, 0"
							Click="AddDepartmentButton_Clicked"
							Padding="3" Style="{DynamicResource MaterialDesignFlatButton}">
                                        <Material:PackIcon Kind="Plus" VerticalAlignment="Center"></Material:PackIcon>
                                    </Button>
                                    <ComboBox VerticalAlignment="Center" 
                                              DisplayMemberPath="DepartmentName"
                                              Loaded="DepartmentCombobox_Loaded"
                                              BorderBrush="{Binding SelectedIndex, Converter={StaticResource EmptySelectionToRedBorderBrush}, RelativeSource={RelativeSource Self}}"
                                              SelectionChanged="DepartmentCombobox_SelectionChanged"
                                              ItemsSource="{Binding DepartmentDbset, ElementName=userControl}"
                                              x:Name="DepartmentCombobox" Material:ComboBoxAssist.ClassicMode="true" Material:ComboBoxAssist.ShowSelectedItem="true"></ComboBox>
                                </DockPanel>

                                <!--Nationality and gender-->
                                <TextBlock Text="Marital Status:" VerticalAlignment="Center" Grid.Row="4" Margin="10, 3"></TextBlock>
                                <ComboBox Grid.Column="1" Grid.Row="4" Margin="10, 3"
                                          SelectionChanged="MaritalCombobox_SelectionChanged"
                                          x:Name="MaritalCombobox" Material:ComboBoxAssist.ClassicMode="true" Material:ComboBoxAssist.ShowSelectedItem="true">
                                    <ComboBoxItem Content="Single" IsSelected="True"></ComboBoxItem>
                                    <ComboBoxItem Content="Married"></ComboBoxItem>
                                    <ComboBoxItem Content="Divorced"></ComboBoxItem>
                                </ComboBox>

                                <TextBlock Text="Gender:" VerticalAlignment="Center" Grid.Row="4" Grid.Column="2" Margin="10, 3"></TextBlock>
                                <ComboBox Grid.Column="3" Grid.Row="4" x:Name="GenderCombobox"
                                          SelectionChanged="GenderCombobox_SelectionChanged"
                                          Margin="10, 3"  Material:ComboBoxAssist.ClassicMode="true" Material:ComboBoxAssist.ShowSelectedItem="true">
                                    <ComboBoxItem Content="Male" IsSelected="True"></ComboBoxItem>
                                    <ComboBoxItem Content="Female"></ComboBoxItem>
                                </ComboBox>

                                <!--Home phone and cell fone-->
                                <TextBlock Text="Home phone:" VerticalAlignment="Center" Grid.Row="5" Margin="10, 3"></TextBlock>
                                <TextBox Grid.Column="1" 
						 Text="{Binding HomePhone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						 MinHeight="24" Grid.Row="5" Margin="10, 3"></TextBox>

                                <TextBlock Text="Cell phone:" VerticalAlignment="Center" Grid.Row="5" Grid.Column="2" Margin="10, 3"></TextBlock>
                                <TextBox Grid.Column="3" 
						 Text="{Binding MobilePhone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						 MinHeight="24" Grid.Row="5" Margin="10, 3">
                                </TextBox>

                                <!--Id -->
                                <TextBlock Text="Identity Cert:" Grid.Row="7" Grid.Column="0" Margin="10, 3" VerticalAlignment="Center" >
                                </TextBlock>
                                <Grid Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Margin="10, 3" Text="{Binding IDNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Material:HintAssist.Hint="Number"></TextBox>
                                    <DatePicker Grid.Column="1" SelectedDate="{Binding DateOf_ID_Issue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10, 3" Material:HintAssist.Hint="Date of issue"></DatePicker>
                                    <TextBox Margin="10, 3" Text="{Binding PlaceOf_ID_Issue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" Material:HintAssist.Hint="Place Of Issue"></TextBox>
                                </Grid>

                                <!--Passport-->
                                <TextBlock Text="Passport:" Grid.Row="8" Grid.Column="0" Margin="10, 3" VerticalAlignment="Center" >
                                </TextBlock>
                                <Grid Grid.Row="8" Grid.Column="1" Grid.ColumnSpan="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Margin="10, 3" 
							 Text="{Binding PassportNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							 Material:HintAssist.Hint="Number"></TextBox>
                                    <DatePicker Grid.Column="1" 
								SelectedDate="{Binding DateOfPassportIssue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Margin="10, 3" Material:HintAssist.Hint="Date of issue"></DatePicker>
                                    <TextBox Margin="10, 3" 
							 Text="{Binding PlaceOfPassportIssue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							 Grid.Column="2" Material:HintAssist.Hint="Place Of Issue"></TextBox>
                                </Grid>

                                <!--Email-->
                                <TextBlock Text="Email:" Grid.Row="9" Grid.Column="0" Margin="10, 3" VerticalAlignment="Center" >
                                </TextBlock>
                                <Grid Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Margin="10, 3" 
                                             BorderBrush="{Binding Text, Converter={StaticResource EmptyStringToRedBorderBrush}, RelativeSource={RelativeSource Self}}"
											 Text="{Binding EmailAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											 Material:HintAssist.Hint="Email" MinHeight="24">
                                    </TextBox>
                                    <TextBox Margin="10, 3" Text="{Binding Email2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											 Grid.Column="2" MinHeight="24" Material:HintAssist.Hint="Alternative Email"></TextBox>
                                </Grid>

                                <!--Address-->
                                <TextBlock Text="Permanent residence:" Grid.Row="10" Grid.Column="0" Margin="10, 3" VerticalAlignment="Center" ></TextBlock>
                                <TextBox Margin="10, 3" Text="{Binding PermanentResidence, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="10" MinHeight="24"></TextBox>

                                <TextBlock Text="Current address:" Grid.Row="11" Grid.Column="0" Margin="10, 3" VerticalAlignment="Center" ></TextBlock>
                                <TextBox Margin="10, 3" Text="{Binding CurrentAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="11" MinHeight="24"></TextBox>

                                <!--Social-->
                                <TextBlock Text="Social Insurance No:" Grid.Row="12" Grid.Column="0" Margin="10, 3" VerticalAlignment="Center" ></TextBlock>
                                <TextBox Margin="10, 3" Text="{Binding SocialInsuranceNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="12" MinHeight="24"></TextBox>

                                <TextBlock Text="PIT Code:" Grid.Row="12" Grid.Column="2" Margin="10, 3" VerticalAlignment="Center" ></TextBlock>
                                <TextBox Margin="10, 3" Text="{Binding PIT_Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="3" Grid.Row="12" MinHeight="24"></TextBox>

                                <!--Bank Account-->
                                <TextBlock Text="VCB Account:" Grid.Row="13" Grid.Column="0" Margin="10, 3" VerticalAlignment="Center" ></TextBlock>
                                <TextBox Margin="10, 3" Text="{Binding VCBAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="13" MinHeight="24"></TextBox>

                                <TextBlock Text="Other Bank Account:" Grid.Row="13" Grid.Column="2" Margin="10, 3" VerticalAlignment="Center" ></TextBlock>
                                <TextBox Margin="10, 3" Grid.Column="3" Text="{Binding OtherBankAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="13" MinHeight="24"></TextBox>

                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!--Education Information-->
        <Grid Margin="10" Grid.Row="2" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=EducationItem}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <DataGrid  x:Name="EducationGrid" MaxHeight="450"  Width="800" CanUserAddRows="False" 
						  RowBackground="Transparent"
						  RowEditEnding="EducationGrid_RowEditEnding"
                            BorderThickness="0"
						  AutoGenerateColumns="False" Background="Transparent">
                <DataGrid.Columns >
                    <DataGridTemplateColumn Header="Education Degree" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Background="White" Margin="6, 3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding EducationDegree, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Name Of School" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding NameOfSchool, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="6, 3"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Country" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Country, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="6, 3"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="City" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding City, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="6, 3"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Major" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Speciality, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="6, 3"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="From" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <DatePicker VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="6, 3" SelectedDate="{Binding FromYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DatePicker>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="To" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <DatePicker VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="6, 3" SelectedDate="{Binding ToYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DatePicker>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Delete" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Padding="3" Tag="{Binding EducationKey}" Click="EducationDeleteButton_Clicked" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource MaterialDesignFlatButton}">
                                    <Material:PackIcon Kind="Delete"></Material:PackIcon>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Margin="10" VerticalAlignment="Center" 
                           Style="{DynamicResource MaterialDesignBody2TextBlock}"
                           Text="Leave the finishing date blank if not graduated."></TextBlock>
                <Button HorizontalAlignment="Right" Margin="10" Grid.Column="1"
					Style="{DynamicResource MaterialDesignFlatButton}"
					Click="EducationAddNewRow">
                    Add new row
                </Button>
            </Grid>
        </Grid>

        <!--Foreign Language Information-->
        <Grid Margin="10" Grid.Row="2" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=LanguageItem}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <DataGrid  x:Name="ForeignLanguageDatagrid" MaxHeight="450" Width="700"  
                       SnapsToDevicePixels="True"
				       CanUserAddRows="False"
                       Background="Transparent"
                       RowBackground="Transparent"
                       AutoGenerateColumns="False">
                <DataGrid.Columns >
                    <DataGridTemplateColumn Header="Language" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Background="White" Margin="6, 3" 
                                         HorizontalAlignment="Stretch" 
                                         VerticalAlignment="Center" 
                                         BorderBrush="{Binding Text, Converter={StaticResource EmptyStringToRedBorderBrush}, RelativeSource={RelativeSource Self}}"
                                         Text="{Binding Language, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Speaking level" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Slider Value="{Binding SpeakingLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TickFrequency="1"
                                        TickPlacement="TopLeft"
                                        Minimum="1" Maximum="5" Margin="6, 3"></Slider>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Listening Level" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Slider Value="{Binding ListeningLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                        TickFrequency="1"
                                        TickPlacement="TopLeft"
                                        Minimum="1" Maximum="5" Margin="6, 3"></Slider>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Reading Level" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Slider Value="{Binding ReadingLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                        TickFrequency="1"
                                        TickPlacement="TopLeft"
                                        Minimum="1" Maximum="5" Margin="6, 3"></Slider>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Writing Level" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Slider Value="{Binding WritingLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                        TickFrequency="1"
                                        TickPlacement="TopLeft"
                                        Minimum="1" Maximum="5" Margin="6, 3"></Slider>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Delete" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Padding="3" Tag="{Binding Key}" Click="LanguageDeleteButton_Clicked" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource MaterialDesignFlatButton}">
                                    <Material:PackIcon Kind="Delete"></Material:PackIcon>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="5 = Native; 4 = Fluent; 3 = Good; 2 = Average; 1 = Weak" 
                           Style="{DynamicResource MaterialDesignBody2TextBlock}"
                           TextWrapping="Wrap" VerticalAlignment="Center"></TextBlock>
                <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="10" Grid.Column="1"
					Style="{DynamicResource MaterialDesignFlatButton}"
					Click="LanguageAddNew_Clicked">
                    Add new row
                </Button>
            </Grid>
        </Grid>

        <!--Practicing License information-->
        <Grid Grid.Row="2" Margin="10" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=PracticingItem}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <DataGrid  x:Name="PracticingDatagrid" MaxHeight="450" Width="700"  
                       SnapsToDevicePixels="True"
				       CanUserAddRows="False"
                       Background="Transparent"
                       RowBackground="Transparent"
                       AutoGenerateColumns="False">
                <DataGrid.Columns >
                    <DataGridTemplateColumn Header="Profestional Area" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <ComboBox Tag="{Binding Key}"
                                              DisplayMemberPath="Name"
                                              Loaded="ProfestionalAreaCombobox_Loaded"/>
                                    <Button Grid.Column="1" 
                                            Click="AddNewAreaButton_Clicked"
                                            Style="{DynamicResource MaterialDesignFlatButton}" Content="+"></Button>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="License Number" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Background="White" Margin="6, 3" 
                                         HorizontalAlignment="Stretch" 
                                         VerticalAlignment="Center" 
                                         BorderBrush="{Binding Text, Converter={StaticResource EmptyStringToRedBorderBrush}, RelativeSource={RelativeSource Self}}"
                                         Text="{Binding LicenseNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Date Of Issue" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding DateOfIssue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="6, 3"></DatePicker>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Place Of Issue" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding PlaceOfIssue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                           Margin="6, 3"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Status" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox Tag="{Binding Key}" Margin="6, 3" Loaded="LicenseStatusComboBox_Loaded" >
                                    <ComboBoxItem Content="Valid"></ComboBoxItem>
                                    <ComboBoxItem Content="Invalid"></ComboBoxItem>
                                    <ComboBoxItem Content="Expired"></ComboBoxItem>
                                    <ComboBoxItem Content="Suppended"></ComboBoxItem>
                                </ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Delete" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Padding="3" Tag="{Binding Key}" Click="LicenseDeleteButton_Clicked" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource MaterialDesignFlatButton}">
                                    <Material:PackIcon Kind="Delete"></Material:PackIcon>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="10" Grid.Column="1"
					Style="{DynamicResource MaterialDesignFlatButton}"
					Click="PracticingAddNew_Clicked">
                    Add new row
                </Button>
            </Grid>
        </Grid>

        <!--Experiences information-->
        <Grid MaxHeight="450" Margin="10" Grid.Row="2" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ExperienceItem}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <DataGrid  x:Name="ExperienceGrid" MaxHeight="450" Width="700"  
                       SnapsToDevicePixels="True"
				       CanUserAddRows="False"
                       Background="Transparent"
                       RowBackground="Transparent"
                       AutoGenerateColumns="False">
                <DataGrid.Columns >
                    <DataGridTemplateColumn Header="Organization" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Background="White" Margin="6, 3" 
                                         HorizontalAlignment="Stretch" 
                                         VerticalAlignment="Center" 
                                         BorderBrush="{Binding Text, Converter={StaticResource EmptyStringToRedBorderBrush}, RelativeSource={RelativeSource Self}}"
                                         Text="{Binding NameOfCompany, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Job Title" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Background="White" Margin="6, 3" 
                                         HorizontalAlignment="Stretch" 
                                         VerticalAlignment="Center" 
                                         BorderBrush="{Binding Text, Converter={StaticResource EmptyStringToRedBorderBrush}, RelativeSource={RelativeSource Self}}"
                                         Text="{Binding Jobtitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="From" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding FromTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="6, 3"></DatePicker>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="To" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding ToTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="6, 3"></DatePicker>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Resignation Reason" Width="200">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Background="White" Margin="6, 3" 
                                         HorizontalAlignment="Stretch" 
                                         VerticalAlignment="Center" 
                                         Text="{Binding ResignationReason, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Delete" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Padding="3" Tag="{Binding Key}" Click="ExpDeleteButton_Clicked" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource MaterialDesignFlatButton}">
                                    <Material:PackIcon Kind="Delete"></Material:PackIcon>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="10" Grid.Column="1"
					Style="{DynamicResource MaterialDesignFlatButton}"
					Click="ExpAddNew_Clicked">
                    Add new row
                </Button>
            </Grid>

        </Grid>

        <!--Permission-->
        <Grid MaxHeight="450" Grid.Row="2" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=PermissionItem}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <DataGrid  x:Name="PermissionGrid" MaxHeight="450" Width="700"  
                       SnapsToDevicePixels="True"
                       HeadersVisibility="None"
				       CanUserAddRows="False"
                       Background="Transparent"
                       RowBackground="Transparent"
                       AutoGenerateColumns="False">
                <DataGrid.Columns >
                    <DataGridTemplateColumn Header="Organization" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid Margin="20" HorizontalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Is this user an administrator?"
                                               Style="{DynamicResource MaterialDesignSubheadingTextBlock}"
                                               Margin="10, 5"></TextBlock>
                                    <ToggleButton Style="{DynamicResource MaterialDesignSwitchToggleButton}"
                                                  VerticalAlignment="Center"
                                                  IsChecked="{Binding IsAdmin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"></ToggleButton>

                                    <TextBlock Text="Can this user add projects?" 
                                               Style="{DynamicResource MaterialDesignSubheadingTextBlock}"
                                               Margin="10, 5" Grid.Row="1"></TextBlock>
                                    <ToggleButton Style="{DynamicResource MaterialDesignSwitchToggleButton}" VerticalAlignment="Center"
                                                  Grid.Row="1"
                                                  IsChecked="{Binding CanAddProject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"></ToggleButton>

                                    <TextBlock Text="Can this user manage staffs?" 
                                               Style="{DynamicResource MaterialDesignSubheadingTextBlock}"
                                               Margin="10, 5" Grid.Row="2"></TextBlock>
                                    <ToggleButton Style="{DynamicResource MaterialDesignSwitchToggleButton}" VerticalAlignment="Center"
                                                  Grid.Row="2"
                                                  IsChecked="{Binding CanManageStaff, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"></ToggleButton>

                                    <TextBlock Text="Give automatic access to all future projects?" 
                                               Style="{DynamicResource MaterialDesignSubheadingTextBlock}"
                                               Margin="10, 5" Grid.Row="3"></TextBlock>
                                    <ToggleButton Style="{DynamicResource MaterialDesignSwitchToggleButton}" VerticalAlignment="Center"
                                                  Grid.Row="3"
                                                  IsChecked="{Binding GiveFutureAccess, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"></ToggleButton>

                                    <TextBlock Text="Can this user manage his/her department?" 
                                               Style="{DynamicResource MaterialDesignSubheadingTextBlock}"
                                               Margin="10, 5" Grid.Row="4"></TextBlock>
                                    <ToggleButton Style="{DynamicResource MaterialDesignSwitchToggleButton}" VerticalAlignment="Center"
                                                  Grid.Row="4"
                                                  IsChecked="{Binding ManageDepartment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"></ToggleButton>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!--Close Button/Add Button-->
        <Border Margin="0, 6, 0, 0" Padding="6" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"  Grid.Row="3" >
            <DockPanel>
                <Button DockPanel.Dock="Left" x:Name="CloseButton" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10" Style="{DynamicResource MaterialDesignRaisedLightButton}" Click="CloseButton_Click">
                    Close
                </Button>
                <Button DockPanel.Dock="Right" HorizontalAlignment="Right"
						Click="AddUserButtonClicked"
						VerticalAlignment="Center" Margin="10" Style="{DynamicResource MaterialDesignRaisedButton}">
                    Add User
                </Button>
            </DockPanel>
        </Border>

        <Material:DialogHost x:Name="DialogHost" Grid.RowSpan="3" Grid.Row="1" Visibility="Collapsed" IsOpen="False" />
        <Material:Snackbar Grid.Row="3" x:Name="MySnackbar" MessageQueue="{Material:MessageQueue}" />
    </Grid>
</UserControl>
